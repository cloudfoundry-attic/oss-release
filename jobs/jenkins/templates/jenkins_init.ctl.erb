#!/bin/bash
PACKAGE_ROOT_DIR=/var/vcap/packages
PACKAGE_DIR=/var/vcap/packages/jenkins
JOB_DIR=/var/vcap/jobs/jenkins
DATA_DIR=/var/vcap/store/jenkins
CONFIG_DIR=/var/vcap/jobs/jenkins/config

NOT_UPGRADE_SITE_CONFIG=<%= properties.jenkins.not_upgrade_site_config||0 %>
NOT_UPGRADE_JOBS=<%= properties.jenkins.not_upgrade_jobs||0 %>
ENABLE_ZABBIX_AGENT=<%= properties.jenkins.enable_zabbix_agent||0 %>

jenkins_address=<%= properties.jenkins.address %>
jenkins_backup_address=<%= properties.jenkins.backup_address %>
/sbin/ifconfig | grep $jenkins_address
if [ $? == 0 ]; then
  jenkins_master_id=1
else
  jenkins_master_id=2
fi

if [ $NOT_UPGRADE_SITE_CONFIG != 1 ]; then
  # Grab all the slaves to the master config file
  cat $JOB_DIR/config/config_head > $JOB_DIR/config/config.xml

  slave_address="<%= properties.jenkins.slaves_ip.join(' ') %>"
  <%if properties.jenkins.backup_slaves_ip %>
  if [ $jenkins_master_id == 2 ]; then
    slave_address="<%= properties.jenkins.backup_slaves_ip.join(' ') %>"
  fi
  <% end %>

  slave_id=1
  for ip_addr in $slave_address
  do
    cat $JOB_DIR/config/config_slave|sed -e "s/SLAVE_CONFIG_NAME/jenk${slave_id}/g" -e "s/SLAVE_CONFIG_IP/${ip_addr}/g" >> $JOB_DIR/config/config.xml
    slave_id=`expr $slave_id + 1`
  done

  cat $JOB_DIR/config/config_tail >> $JOB_DIR/config/config.xml

  # Harden Secure Configurations
  chown -R vcap:vcap $JOB_DIR/config/
  chmod -R 600 $JOB_DIR/config/

  # Configurations replacement
  cp -pf $JOB_DIR/config/*.xml $DATA_DIR/
fi

# SSH keyfile for reviewbot
chown vcap:vcap $PACKAGE_DIR/review*
chmod 600 $PACKAGE_DIR/review*
cp -pf $PACKAGE_DIR/review* $DATA_DIR/

# Copy Plugins
cp -rf $PACKAGE_DIR/plugins $DATA_DIR/
chown -R vcap:vcap $DATA_DIR/plugins/

# Passwdless ssh host key pair(for slave)
mkdir -p /home/vcap/.ssh
if [ $jenkins_master_id == 1 ]; then
  cp $CONFIG_DIR/{id_rsa,id_rsa.pub} /home/vcap/.ssh
  chmod 0600 /home/vcap/.ssh/{id_rsa,id_rsa.pub}
else
  cp $CONFIG_DIR/{id_rsa,id_rsa.pub,authorized_keys} /home/vcap/.ssh
  chmod 0600 /home/vcap/.ssh/{id_rsa,id_rsa.pub,authorized_keys}

  cat /etc/sudoers | grep "vcap  ALL=(ALL) NOPASSWD: ALL" > /dev/null 2>&1
  [ $? != 0 ] && echo "vcap  ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
fi
chown -R vcap:vcap /home/vcap/.ssh
if [ $jenkins_master_id == 1 ] && [ ! -z "$jenkins_backup_address" ]; then
  su - vcap -c "ssh-keygen -f /home/vcap/.ssh/known_hosts -R $jenkins_backup_address"
  su - vcap -c "ssh-keyscan $jenkins_backup_address >> /home/vcap/.ssh/known_hosts"
fi

# SSH Keyfile for gerrit-trigger
cp /var/vcap/jobs/jenkins/config/gerrit_trigger_key $DATA_DIR
chown vcap:vcap $DATA_DIR/gerrit_trigger_key
chmod 0600 $DATA_DIR/gerrit_trigger_key

if [ $NOT_UPGRADE_JOBS != 1 ]; then
  # Update the job configs
  $JOB_DIR/bin/render_jenkins_jobs
fi
chown -R vcap:vcap $DATA_DIR/jobs

# Fonts needed for graph drawing
if [ ! -e /usr/share/fonts/truetype/ttf-dejavu ];
then
  mkdir -p /usr/share/fonts/truetype
  ln -s /var/vcap/packages/ttf_dejavu /usr/share/fonts/truetype/ttf-dejavu
fi

# install zabbix agent
if [ $ENABLE_ZABBIX_AGENT = 1 ]; then
  dpkg -iE $PACKAGE_ROOT_DIR/zabbix_agent/bds-zabbix_0.1-39_all.deb
else
  zabbix_running=`ps -ef | grep zabbix | grep -c -v "grep"`
  if [ $zabbix_running -gt 0 ]; then
    killall zabbix_agentd
  fi
  zabbix_installed=`dpkg -l | grep -c bds-zabbix`
  if [ $zabbix_installed -gt 0 ] ; then
    dpkg -P bds-zabbix
  fi
fi
