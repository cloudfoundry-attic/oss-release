<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <displayName>AWS Registry Unit Tests</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>ssh://<%= ENV['CF_CI_USER'] %>@<%= ENV['CF_GERRIT_ADDRESS'] %>:<%= ENV['CF_GERRIT_PORT'] %>/bosh.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser">
      <separator>#</separator>
    </buildChooser>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export PATH=$VCAP_RUBY19/bin:$PATH

RUBY19_REALPATH=`readlink -nf $VCAP_RUBY19`
SQLITE_REALPATH=`readlink -nf $VCAP_SQLITE`
RAKE_SUPPORT_DIR=$PWD/rake
AWS_REGISTRY=$PWD/aws_registry

rm -rf $AWS_REGISTRY/ci_result

TEST_RUNNER=`mktemp`
cat &lt;&lt;-EOT &gt; $TEST_RUNNER
export PATH=$RUBY19_REALPATH/bin:$PATH
export LIBRARY_PATH=$SQLITE_REALPATH/lib:$LIBRARY_PATH
export C_INCLUDE_PATH=$SQLITE_REALPATH/include:$C_INCLUDE_PATH
cd /tmp/aws_registry
bundle install --deployment --without development production
cd spec
bundle exec rake spec:unit:ci
EOT

HANDLE=`$CREATE_CONTAINER $RUBY19_REALPATH $SQLITE_REALPATH`
$WARDEN_REPL -c &quot;
copy $HANDLE in $RAKE_SUPPORT_DIR /tmp
copy $HANDLE in $AWS_REGISTRY /tmp
copy $HANDLE in $TEST_RUNNER /tmp
run $HANDLE chmod +x $TEST_RUNNER
run $HANDLE $TEST_RUNNER
copy $HANDLE out /tmp/aws_registry/ci_result $AWS_REGISTRY vcap:vcap
destroy $HANDLE
&quot;
rm -f $TEST_RUNNER
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>aws_registry/ci_result/**</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>aws_registry/ci_result/reports/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.rubyMetrics.rcov.RcovPublisher>
      <reportDir>aws_registry/ci_result/coverage/rcov</reportDir>
      <targets>
        <hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
          <metric>TOTAL_COVERAGE</metric>
          <healthy>80</healthy>
          <unhealthy>0</unhealthy>
          <unstable>0</unstable>
        </hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
        <hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
          <metric>CODE_COVERAGE</metric>
          <healthy>60</healthy>
          <unhealthy>0</unhealthy>
          <unstable>0</unstable>
        </hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
      </targets>
    </hudson.plugins.rubyMetrics.rcov.RcovPublisher>
  </publishers>
  <buildWrappers/>
</project>