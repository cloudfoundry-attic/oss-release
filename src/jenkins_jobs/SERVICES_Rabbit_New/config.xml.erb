<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <displayName>Rabbit Unit Test</displayName>
  <logRotator>
    <daysToKeep>30</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty>
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec>$GERRIT_REFSPEC</refspec>
        <url>ssh://<%= ENV['CF_CI_USER'] %>@<%= ENV['CF_GERRIT_ADDRESS'] %>:<%= ENV['CF_GERRIT_PORT'] %>/vcap-services.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>false</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser">
      <separator>#</separator>
    </buildChooser>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>export PATH=$VCAP_RUBY19/bin:$PATH

RUBY19_REALPATH=`readlink -nf $VCAP_RUBY19`
RABBITMQ24_REALPATH=`readlink -nf $VCAP_RABBITMQ24`
RABBITMQ28_REALPATH=`readlink -nf $VCAP_RABBITMQ28`
ERLANG_REALPATH=`readlink -nf $VCAP_ERLANG`
SQLITE_REALPATH=`readlink -nf $VCAP_SQLITE`
GIT_REALPATH=`readlink -nf $VCAP_GIT`

RABBITMQ24_INNERPATH=/var/vcap/packages/rabbitmq-2.4
RABBITMQ28_INNERPATH=/var/vcap/packages/rabbitmq-2.8
WARDEN_DEPOT=$WARDEN_INSTANCES

RABBIT_SVC=$PWD/rabbit

echo &quot;creating the warden container for unit-test&quot;
HANDLE=`$WARDEN_REPL_V2 -- create \
--bind_mounts[0].src_path &quot;$RUBY19_REALPATH&quot; --bind_mounts[0].dst_path &quot;$RUBY19_REALPATH&quot; --bind_mounts[0].mode RO \
--bind_mounts[1].src_path &quot;$GIT_REALPATH&quot; --bind_mounts[1].dst_path &quot;$GIT_REALPATH&quot; --bind_mounts[1].mode RO \
--bind_mounts[2].src_path &quot;$SQLITE_REALPATH&quot; --bind_mounts[2].dst_path &quot;$SQLITE_REALPATH&quot; --bind_mounts[2].mode RO \
--bind_mounts[3].src_path &quot;$RABBITMQ24_REALPATH&quot; --bind_mounts[3].dst_path &quot;/var/vcap/packages/rabbitmq-2.4&quot; --bind_mounts[3].mode RO \
--bind_mounts[4].src_path &quot;$RABBITMQ28_REALPATH&quot; --bind_mounts[4].dst_path &quot;/var/vcap/packages/rabbitmq-2.8&quot; --bind_mounts[4].mode RO \
--bind_mounts[5].src_path &quot;$ERLANG_REALPATH&quot; --bind_mounts[5].dst_path &quot;$ERLANG_REALPATH&quot; --bind_mounts[5].mode RO \
| cut -d &quot; &quot; -f 3`

TEST_RUNNER=`mktemp`
cat &lt;&lt;-EOT &gt; $TEST_RUNNER
#!/bin/bash
set -x
set -o errexit
export PATH=$RUBY19_REALPATH/bin:$GIT_REALPATH/bin:$VCAP_ERLANG/bin:$PATH
export LIBRARY_PATH=$SQLITE_REALPATH/lib:$LIBRARY_PATH
export C_INCLUDE_PATH=$SQLITE_REALPATH/include:$C_INCLUDE_PATH
export CI_ENV=&apos;jenkins&apos;

# nats expects to write in /var/vcap/sys/run
sudo mkdir -p /var/vcap/sys/run
sudo chown -R vcap:vcap /var/vcap/sys/run

# make softlink for erlang
ln -s $ERLANG_REALPATH /var/vcap/packages/erlang

cd /tmp/rabbit_source/rabbit
rm -rf .bundle
rm -rf vendor/bundle

sed -i &quot;s/local_db: sqlite3:\/var\/vcap\/services\/rabbit\/rabbit_node.db/local_db: sqlite3:rabbit_node.db/g&quot; config/rabbit_node.yml
sed -i &quot;s/$# rabbitmq_start_timeout: 5/$rabbitmq_start_timeout: 9/g&quot; config/rabbit_node.yml

bundle install --deployment --without development production
bundle exec nats-server --daemonize --pid /tmp/nats.pid
bundle exec rake spec:ci
EOT

echo &quot;enable vcap could execute sudo without password within warden&quot;
sudo ls $WARDEN_INSTANCES/$HANDLE/ssh/ssh_config
set +e
vcap_sudo_line=&quot;vcap ALL=(ALL) NOPASSWD:ALL&quot;
vcap_chk_ret=`sudo ssh -T -F $WARDEN_INSTANCES/$HANDLE/ssh/ssh_config root@container cat /etc/sudoers | grep &quot;$vcap_sudo_line&quot;`
if test -z &quot;$vcap_chk_ret&quot;
then
  sudo ssh -T -F $WARDEN_INSTANCES/$HANDLE/ssh/ssh_config root@container chmod 740 /etc/sudoers
  sudo ssh -T -F $WARDEN_INSTANCES/$HANDLE/ssh/ssh_config root@container &quot;echo \&quot;Defaults:vcap !requiretty\&quot; &gt;&gt; /etc/sudoers&quot;
  sudo ssh -T -F $WARDEN_INSTANCES/$HANDLE/ssh/ssh_config root@container &quot;echo \&quot;$vcap_sudo_line\&quot; &gt;&gt; /etc/sudoers&quot;
  sudo ssh -T -F $WARDEN_INSTANCES/$HANDLE/ssh/ssh_config root@container chmod 440 /etc/sudoers
fi

$WARDEN_REPL -e -x -c &quot;
copy $HANDLE in $RABBIT_SVC /tmp/rabbit_source
copy $HANDLE in $TEST_RUNNER /tmp
run $HANDLE chmod +x $TEST_RUNNER
run $HANDLE sudo /bin/bash $TEST_RUNNER
copy $HANDLE out /tmp/rabbit_source/rabbit/spec_reports $RABBIT_SVC vcap:vcap
copy $HANDLE out /tmp/rabbit_source/rabbit/spec_coverage $RABBIT_SVC vcap:vcap
destroy $HANDLE
&quot;

rm -f $TEST_RUNNER</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>rabbit/spec_reports/**</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>rabbit/spec_reports/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.rubyMetrics.rcov.RcovPublisher>
      <reportDir>rabbit/spec_coverage/rcov</reportDir>
      <targets>
        <hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
          <metric>TOTAL_COVERAGE</metric>
          <healthy>80</healthy>
          <unhealthy>0</unhealthy>
          <unstable>0</unstable>
        </hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
        <hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
          <metric>CODE_COVERAGE</metric>
          <healthy>80</healthy>
          <unhealthy>0</unhealthy>
          <unstable>0</unstable>
        </hudson.plugins.rubyMetrics.rcov.model.MetricTarget>
      </targets>
    </hudson.plugins.rubyMetrics.rcov.RcovPublisher>
  </publishers>
  <buildWrappers/>
</project>
